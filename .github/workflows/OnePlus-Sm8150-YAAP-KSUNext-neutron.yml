name: Build OnePlus-Sm8150-YAAP-KSUNext
on:
  workflow_dispatch:
    inputs:
      release:
        description: "Create a release for this build"
        required: true
        type: boolean
        default: true

  # schedule:
  #   # Run once a week on Sunday at midnight. See http://crontab.guru
  #   - cron: "0 21 * * *"
  # push:
  #   branches:
  #     - fifteen
  # pull_request:
  #   branches:
  #     - fifteen

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_MAXSIZE: "2G"
      CCACHE_HARDLINK: "true"
      GOOGLE_CLANG_VERSION: "r547379"
    steps:
      - uses: actions/checkout@v4
      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
      - name: Remove unnecessary files
        run: |
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf /usr/share/dotnet

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt install -y gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi \
             libelf-dev libarchive-tools lld llvm axel build-essential mkbootimg device-tree-compiler

          git clone https://github.com/walkonbothsides/AnyKernel3 -b oneplus7 --depth=1
          rm -rf AnyKernel3/.git

      - name: Restore Google clang toolchains
        id: restore-google-clang-toolchains
        uses: actions/cache@v4
        with:
          path: |
            toolchains/google-clang
          key: google-clang-${{ env.GOOGLE_CLANG_VERSION }}
          restore-keys: |
            google-clang-${{ env.GOOGLE_CLANG_VERSION }}
      
      - name: Download Google clang toolchains
        if: steps.restore-google-clang-toolchains.outputs.cache-hit != 'true'
        run: |
          mkdir -p "./toolchains/google-clang"
          cd "./toolchains/google-clang"
          wget -q -nc "https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/mirror-goog-main-llvm-toolchain-source/clang-${{ env.GOOGLE_CLANG_VERSION }}.tar.gz"
          tar xf clang-${{ env.GOOGLE_CLANG_VERSION }}.tar.gz
          rm clang-${{ env.GOOGLE_CLANG_VERSION }}.tar.gz

      - uses: rui314/setup-mold@v1

      - name: Checkout Android 16 kernel source
        run: |
          rm -rf kernel
          git clone --recurse-submodules https://github.com/yaap/kernel_oneplus_sm8150 -b sixteen --depth=1 kernel
          cd kernel && patch -p1 < kernelsu.patch
          patch -p1 < ${{ github.workspace }}/patches/path_umount.patch
          # mold
          patch -p1 < ${{ github.workspace }}/patches/lto_mold_support.patch
          curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash -
          cd ..

      - name: Get Version
        id: get_version
        run: |
          cd kernel/KernelSU-Next
          git rev-list --count HEAD
          echo "KSUVERSION=$(expr $(git rev-list --count HEAD) + 10200)" >> $GITHUB_OUTPUT
          cd ../../

          cd kernel
          git rev-parse --short=7 HEAD
          echo "KVERSION=$(expr $(git rev-parse --short=7 HEAD) )" >> $GITHUB_OUTPUT
          cd ..

          echo "NOW=$(date +'%Y%m%dT%H%M')" >> $GITHUB_OUTPUT

      - name: Build Kernel LLVM
        run: |
          export PATH=$(pwd)/toolchains/google-clang/bin/:$PATH
          export KERNEL_DEFCONFIG="gulch_defconfig"
          export BRAND_SHOW_FLAG=oneplus
          export TARGET_PRODUCT=msmnile
          export KBUILD_BUILD_USER=Sakari
          export KBUILD_BUILD_HOST=Cygnus
          cd kernel
          make ARCH=arm64 LLVM=1 O=out CC="ccache clang" LD=mold $KERNEL_DEFCONFIG
          make ARCH=arm64 LLVM=1 O=out CC="ccache clang" LD=mold -j$(nproc --all)
          cp out/arch/arm64/boot/Image ../AnyKernel3
          cd ..

      - name: Create AK3 zip for android 16
        run: |
          cd AnyKernel3
          # zip -r ../OP7-YAAP-${{ steps.get_version.outputs.KVERSION }}-KSUNext-${{ steps.get_version.outputs.KSUVERSION }}.zip *
          zip -r ../OP7-YAAP-Kernel-Arcalis-${{ steps.get_version.outputs.NOW }}.zip *
          cd ..

      - name: Upload Kernel-SU
        uses: actions/upload-artifact@v4
        with:
          name: OP7-YAAP-Kernel-Arcalis-${{ steps.get_version.outputs.NOW }}
          path: "AnyKernel3/*"

      - name: Upload to Release
        if: ${{ inputs.release }}
        uses: softprops/action-gh-release@v1
        with:
          files: |
            OP7-YAAP-Kernel-Arcalis-${{ steps.get_version.outputs.NOW }}.zip
          name: OP7-YAAP-${{ steps.get_version.outputs.KVERSION }}-KSUNext-${{ steps.get_version.outputs.KSUVERSION }}
          tag_name: ${{ steps.get_version.outputs.NOW }}
          body: |
            Device: Oneplus 7
            Target: YAAP 16
            Kernel commit: [${{ steps.get_version.outputs.KVERSION }}](https://github.com/yaap/kernel_oneplus_sm8150/commit/${{ steps.get_version.outputs.KVERSION }})
            KSUNext: ${{ steps.get_version.outputs.KSUVERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
